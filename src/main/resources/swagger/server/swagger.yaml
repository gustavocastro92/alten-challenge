openapi: 3.0.2
info:
  title: Hotel API
  description: "Project created for the technical challenge provided by Alten."
  contact:
    email: gustavogcastro1992@gmail.com

  version: 0.0.1-SNAPSHOT

paths:
  /rooms:
    get:
      tags:
        - room
      summary: 'Get the hotel rooms'
      operationId: getRooms
      parameters:
        - name: id
          in: query
          schema:
            type: integer
            format: int64
        - name: roomNumber
          in: query
          schema:
            type: string
        - name: userId
          in: query
          schema:
            type: string
      responses:
        '200':
          description: 'Successful response'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RoomResponse'
        '204':
          description: 'Empty response'
        '422':
          description: 'Incorrect parameters'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - room
      summary: 'Create a hotel room'
      operationId: addRoom
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoomRequest'
      responses:
        '201':
          description: 'Successfully created'
          headers:
            location:
              schema:
                type: integer
                description: 'Id of the room created'
        '422':
          description: 'Incorrect parameters'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /rooms/{id}:
    put:
      tags:
        - room
      summary: 'Updates the room information'
      operationId: updateRoom
      parameters:
        - name: id
          in: path
          description: 'Room id'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoomUpdateRequest'
      responses:
        '200':
          description: 'Ok'
        '422':
          description: 'Incorrect parameters'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /rooms/{id}/reservations:
    get:
      tags:
        - reservation
      operationId: 'getReservation'
      parameters:
        - name: id
          in: path
          description: 'Room id'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'Get all room reservations'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReservationResponse'
        '204':
          description: 'Empty response'
        '422':
          description: 'Incorrect parameters'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - reservation
      operationId: addReservation
      parameters:
        - name: id
          in: path
          description: 'Room id'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReservationRequest'
      responses:
        '201':
          description: Created
        '422':
          description: 'Incorrect parameters'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /reservations/{id}:
    put:
      tags:
        - reservation
      summary: 'Updates the reservation information'
      operationId: updateReservation
      parameters:
        - name: id
          in: path
          description: 'Reservation id'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReservationUpdateRequest'
      responses:
        '200':
          description: 'Ok'
        '422':
          description: 'Incorrect parameters'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: 'Internal Server Error'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:

    Reservation:
      type: object
      properties:
        dateStart:
          type: string
          format: date
          example: '2021-09-14T17:32:28Z'
          required: true
        dateEnd:
          type: string
          format: date
          example: '2021-09-17T17:32:28Z'
          required: true
        roomId:
          required: true
          type: integer
          format: int64
          example: '123'

    ReservationRequest:
      allOf:
        - $ref: '#/components/schemas/Reservation'
        - type: object
          properties:
            userId:
              description: 'Id of the user who is making the reservation'
              type: integer
            token:
              description: 'Required to control reservations. If different from the room token, the reservation will not be made.'
              required: true
              type: string
              format: uuid

    ReservationUpdateRequest:
      allOf:
        - $ref: '#/components/schemas/Reservation'
        - type: object
          properties:
            userId:
              description: 'Id of the user who is making the reservation'
              type: integer
            status:
              $ref: '#/components/schemas/ReservationStatus'

    ReservationResponse:
      allOf:
        - $ref: '#/components/schemas/Reservation'
        - type: object
          properties:
            id:
              type: integer
              description: 'Reservation id'
            status:
              $ref: '#/components/schemas/ReservationStatus'

    ReservationStatus:
      type: string
      enum:
        - ACTIVE
        - CANCELED_BY_USER
        - CANCELED_BY_STAFF

    Room:
      type: object
      properties:
        roomNumber:
          type: string
          description: 'Physical room number'
          example: '221B'
        description:
          type: string
          description: 'Room description'
          example: 'Only room available in the hotel'
        status:
          $ref: '#/components/schemas/RoomStatus'
        token:
          description: 'Required to control reservations. If different from the current one, the reservation will not be made.'
          required: true
          type: string
          format: uuid

    RoomRequest:
      allOf:
        - $ref: '#/components/schemas/Room'
        - type: object
          properties:
            userId:
              description: 'Id of the user who is managing the room'
              type: integer

    RoomUpdateRequest:
      allOf:
        - $ref: '#/components/schemas/Room'

    RoomResponse:
      allOf:
        - $ref: '#/components/schemas/Room'
        - type: object
          properties:
            id:
              type: integer
              description: 'Room internal id'
              example: '123'
            reservations:
              type: array
              items:
                $ref: '#/components/schemas/ReservationResponse'

    RoomStatus:
      type: string
      enum:
        - ACTIVE
        - INACTIVE

    Error:
      type: object
      description: 'Default error class'
      properties:
        errorCode:
          type: integer
          description: 'Internal error code'
          example: 1001
        message:
          type: string
          description: 'Error message'
          example: 'Invalid filter'

servers:
  - url: http://localhost:8080